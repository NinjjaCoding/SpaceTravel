{"mappings":"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","sources":["src/scripts.js"],"sourcesContent":["let scene, camera, renderer, starGeo, stars;\r\n\r\n        function init() {\r\n            scene = new THREE.Scene();\r\n            camera = new THREE.PerspectiveCamera(60, window.innerWidth / window.innerHeight,\r\n             1, 1000);\r\n             camera.position.z = 1;\r\n             camera.position.x = Math.PI/2; //return PI value /2\r\n\r\n             renderer = new THREE.WebGLRenderer();\r\n             renderer.setSize(window.innerWidth, window.innerHeight);\r\n             document.body.appendChild(renderer.domElement);\r\n\r\n\r\n             //individual sphereGeo slows down site..use vertices array each with start material wrapped\r\n             starGeo = new THREE.Geometry();\r\n             for(let i=0; i < 1000; i++) {\r\n                 star = new THREE.Vector3(\r\n                     Math.random() * 600 - 300,\r\n                      Math.random() * 600 - 300,\r\n                     Math.random() * 600 - 300,\r\n                 );\r\n                 star.velocity = 0; //star speed begin = 0\r\n                 star.acceleration = 0.02;\r\n                 starGeo.vertices.push(stars);\r\n            }\r\n            let starTexture = new THREE.TextureLoader().load('src/whitespher.jpg');\r\n            let starMaterial = new THREE.PointsMaterial({\r\n               color: 0xaaaaaa,\r\n               size: 0.7,\r\n               map: starTexture \r\n            });\r\n\r\n            stars = new THREE.Points(starGeo, starMaterial);\r\n            scene.add(stars);\r\n         animate(); \r\n        }\r\n\r\n        function onWindowResize() {\r\n            camera.aspect = window.innerWidth / window.innerHeight;\r\n            camera.updateProjectionMatrix();\r\n            renderer.setSize(window.innerWidth, window.innerHeight)\r\n        }\r\n\r\n            //function to run and animate the code \r\n        function animate() {\r\n            //animate star space travel\r\n            starGeo.vertices.forEach(point => {\r\n                point.velocity += point.acceleration;\r\n                point.y -= point.velocity;\r\n                if(point.y < -200 ) { //if star points go out of screen start over\r\n                    point.y = 200;\r\n                    point.velocity = 0; \r\n                }   \r\n            });\r\n            //now we need to update our starGeo\r\n            starGeo.verticesNeedUpdate = true;\r\n            stars.rotation.y += 0.002; //small rotation in stars to create 3d cinema effect\r\n\r\n            renderer.render( scene, camera );\r\n            requestAnimationFrame(animate);\r\n        }\r\n        init();\r\n"],"names":[],"version":3,"file":"index.f68744d1.js.map","sourceRoot":"/__parcel_source_root/"}